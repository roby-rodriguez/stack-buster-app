{
  "rules": {
    "questions": {
      "user": {
        ".read": "auth.uid != null && query.orderByChild == 't/user_id' && query.equalTo == auth.uid",
				".indexOn": "t/user_id",
        "$qid": {
          ".write": "!root.hasChild('questions/default/' + $qid +'/t')",
          ".validate": "$qid.matches(/^\\d+$/) && newData.hasChildren(['t', 'uid'])",
          "t": {
            ".read": "data.child('user_id').val() == auth.uid",
            ".write": "(data.exists() && auth.uid === data.child('t').child('user_id').val()) || (newData.exists() &&auth.uid=== newData.child('t').child('user_id').val())",
            ".validate": "newData.hasChildren(['badgeType', 'user_id']) || newData.hasChildren(['completed']) || newData.hasChildren(['progress'])",
            "completed": {
              ".validate": "!data.exists() && newData.exists() && newData.isString() && newData.val().matches(/^\\d{1,2}[%]$/)"
            },
            "uid": {
              ".validate": "!data.exists() && newData.exists() && newData.isString() && newData.val().matches(/^\\d+$/)"
            },
            "badgeType": {
              ".validate": "!data.exists() && newData.exists() && ('ANNOUNCER' === newData.val() || 'BOOSTER' === newData.val() || 'PUBLICIST' === newData.val())"
            },
            "progress": {
              ".validate": "!data.exists() && newData.exists() && ('COMPLETED' === newData.val() || 'IN_PROGRESS' === newData.val() || 'DELETED' === newData.val() || 'ABORTED' === newData.val())"
            },
            "user_id": {
              ".validate": "!data.exists() && newData.exists() && newData.isString()"
            },
            "$others": {
              ".validate": false
            }
          },
          "uid": {
            ".validate": "!data.exists() && newData.exists() && newData.isString() && newData.val().matches(/^\\d+$/)"
          },
          "$others": {
            ".validate": false
          }
        }
      },
      "default": {
        ".read": "auth.uid != null && query.orderByChild == 't/user_id' && query.equalTo == auth.uid",
				".indexOn": "t/user_id",
        "$qid": {
          ".write": "(data.exists() && auth.uid === data.child('t').child('user_id').val()) || (newData.exists() && auth.uid=== newData.child('t').child('user_id').val())",
          ".validate": "$qid.matches(/^\\d+$/) && newData.hasChildren(['t'])",
          "t": {
            ".read": "data.child('user_id').val() == auth.uid",
            ".write": "!root.hasChild('questions/user/' + $qid +'/t')",
            ".validate": "newData.hasChildren(['badgeType', 'user_id']) || newData.hasChildren(['completed']) || newData.hasChildren(['progress'])",
            "completed": {
              ".validate": "!data.exists() && newData.exists() && newData.isString() && newData.val().matches(/^\\d{1,2}[%]$/)"
            },
            "badgeType": {
              ".validate": "!data.exists() && newData.exists() && ('POPULAR_QUESTION' === newData.val() || 'NOTABLE_QUESTION' === newData.val() || 'FAMOUS_QUESTION' === newData.val())"
            },
            "progress": {
              ".validate": "!data.exists() && newData.exists() && ('COMPLETED' === newData.val() || 'IN_PROGRESS' === newData.val() || 'DELETED' === newData.val() || 'ABORTED' === newData.val())"
            },
            "user_id": {
              ".validate": "!data.exists() && newData.exists() && newData.isString()"
            },
            "$others": {
              ".validate": false
            }
          },
          "$others": {
            ".validate": false
          }
        }
      }
    },
    "workingQuestions": {
      ".read": false,
      ".write": false
    },
    "users": {
      ".read": false,
      ".write": false
    },
    "workingUsers": {
      ".read": false,
      ".write": false
    }
  }
}